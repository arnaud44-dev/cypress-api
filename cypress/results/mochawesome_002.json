{
  "stats": {
    "suites": 3,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2022-05-23T07:21:47.408Z",
    "end": "2022-05-23T07:21:47.865Z",
    "duration": 457,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "b9309b52-e766-4d0a-a9d0-0783c8f0b9d2",
      "title": "",
      "fullFile": "cypress/integration/APIS/GET.spec.js",
      "file": "cypress/integration/APIS/GET.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "3c6d927f-1ce2-4768-97ba-5aab70369093",
          "title": "Given the Users api",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "0b0cb573-922b-4ba8-bced-15f1317186a9",
              "title": "When I send GET /usuarios",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Then it should return a list with all registered users",
                  "fullTitle": "Given the Users api When I send GET /usuarios Then it should return a list with all registered users",
                  "timedOut": null,
                  "duration": 264,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: '/usuarios'\n}).should(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body.quantidade).to.eq(response.body.usuarios.length);\n  Cypress._.each(response.body.usuarios, usuario => {\n    expect(usuario.email).to.not.be.null;\n    expect(usuario).to.have.all.keys('nome', 'email', 'password', 'administrador', '_id');\n  });\n});",
                  "err": {},
                  "uuid": "0e9bfeb2-b383-43d4-9194-b4bd98479e6e",
                  "parentUUID": "0b0cb573-922b-4ba8-bced-15f1317186a9",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "0e9bfeb2-b383-43d4-9194-b4bd98479e6e"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 264,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            },
            {
              "uuid": "975dfd04-fb9b-4017-8d1c-7f00793084a1",
              "title": "When I send GET /usuarios passing id query param",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Then it should return only the filtered user",
                  "fullTitle": "Given the Users api When I send GET /usuarios passing id query param Then it should return only the filtered user",
                  "timedOut": null,
                  "duration": 159,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "cy.request({\n  method: 'GET',\n  url: '/usuarios',\n  qs: {\n    _id: '0uxuPY0cbmQhpEz1'\n  }\n}).should(response => {\n  expect(response.status).to.eq(200);\n  expect(response.body.usuarios[0].nome).to.eq(\"Fulano da Silva\");\n});",
                  "err": {},
                  "uuid": "3dd277a7-ca14-47ae-afef-0a0215de15a5",
                  "parentUUID": "975dfd04-fb9b-4017-8d1c-7f00793084a1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "3dd277a7-ca14-47ae-afef-0a0215de15a5"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 159,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/results",
        "overwrite": false,
        "html": true,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}